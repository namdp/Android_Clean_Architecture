apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-allopen'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion build_versions.target_sdk
    buildToolsVersion build_versions.build_tools

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError true
        ignoreWarnings false
        lintConfig rootProject.file('lint.xml')
    }

    // Specifies a flavor dimension.
    flavorDimensions "app"
    productFlavors {
        cleanArchitecture {
            applicationId "com.namdinh.cleanarchitecture"
            versionCode 1
            versionName "1.0"
            dimension "app"
        }
    }

    File signingFile = file('signing.properties')
    if (signingFile.exists()) {
        Properties properties = new Properties()
        properties.load(new FileInputStream(signingFile))
        signingConfigs {
            cleanArchitecture {
                storeFile file(properties.APP_STORE_FILE)
                storePassword properties.STORE_PASSWORD
                keyAlias properties.APP_KEY_ALIAS
                keyPassword properties.KEY_PASSWORD
            }
        }
    }

    defaultConfig {
        minSdkVersion build_versions.min_sdk
        targetSdkVersion build_versions.target_sdk
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        productFlavors.cleanArchitecture.signingConfig signingConfigs.cleanArchitecture
    }

    buildTypes {
        debug {
            debuggable true
            buildConfigField "String", "SERVER_ADDRESS", STAGING_SERVER_ADDRESS
        }
        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            buildConfigField "String", "SERVER_ADDRESS", SERVER_ADDRESS
        }
    }
}
dependencies {
    implementation deps.support.app_compat
    implementation deps.support.recyclerview
    implementation deps.support.cardview
    implementation deps.support.design
    implementation deps.constraint_layout

    implementation deps.kotlin.stdlib

    implementation deps.navigation.fragment_ktx
    implementation deps.lifecycle.runtime
    implementation deps.lifecycle.extensions
    implementation deps.lifecycle.java8
    implementation deps.lifecycle.reactivestreams
    implementation deps.room.runtime
    implementation deps.room.rxjava2
    kapt deps.lifecycle.compiler
    kapt deps.room.compiler

    implementation deps.dagger.runtime
    implementation deps.dagger.android
    implementation deps.dagger.android_support
    kapt deps.dagger.android_support_compiler
    kapt deps.dagger.compiler

    implementation deps.retrofit.runtime
    implementation deps.retrofit.gson
    implementation deps.retrofit.adapter
    implementation deps.okhttp_logging_interceptor

    implementation deps.glide.runtime
    kapt deps.glide.compiler

    implementation deps.rx.java2
    implementation deps.rx.android
    implementation deps.rx.java2_extentions
    implementation deps.rx.uber_autodispose

    implementation deps.timber
}
repositories {
    mavenCentral()
}