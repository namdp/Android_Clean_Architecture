/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
* Shared file between builds so that they can all use the same dependencies and
* maven repositories.
**/
ext.deps = [:]

def build_versions = [:]
build_versions.min_sdk = 14
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
ext.build_versions = build_versions

def versions = [:]
versions.android_gradle_plugin = '3.4.0'
versions.kotlin = "1.3.20"

versions.arch_core = "2.0.0"
versions.room = "2.0.0"
versions.lifecycle = "2.0.0"
versions.navigation = "1.0.0-alpha06"
versions.paging = "2.1.0-beta01"
versions.support = "1.0.0"
versions.constraint_layout = "2.0.0-alpha2"

versions.dagger = "2.16"
versions.retrofit = "2.3.0"
versions.realm = "5.7.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.glide = "4.8.0"

versions.rxjava2 = "2.1.3"
versions.rx_android = "2.0.1"
versions.rxjava2_extentions = "0.20.0"
versions.uber_autodispose = "0.4.0"

versions.timber = "4.5.1"

versions.ktlint = "0.29.0"
versions.detekt = "1.0.0-RC12"

def deps = [:]
deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def arch_core = [:]
arch_core.testing = "androidx.arch.core:core-testing:$versions.arch_core"
deps.arch_core = arch_core

def lifecycle = [:]
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.reactivestreams = "androidx.lifecycle:lifecycle-reactivestreams:$versions.lifecycle"
deps.lifecycle = lifecycle

def room = [:]
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def paging = [:]
paging.runtime = "androidx.paging:paging-runtime:$versions.paging"
paging.rxjava2 = "androidx.paging:paging-rxjava2:$versions.paging"
deps.paging = paging

def navigation = [:]
navigation.runtime = "android.arch.navigation:navigation-runtime:$versions.navigation"
navigation.runtime_ktx = "android.arch.navigation:navigation-runtime-ktx:$versions.navigation"
navigation.fragment = "android.arch.navigation:navigation-fragment:$versions.navigation"
navigation.fragment_ktx = "android.arch.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.safe_args_plugin = "android.arch.navigation:navigation-safe-args-gradle-plugin:$versions.navigation"
navigation.testing_ktx = "android.arch.navigation:navigation-testing-ktx:$versions.navigation"
deps.navigation = navigation

def support = [:]
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.support"
support.cardview = "androidx.cardview:cardview:$versions.support"
support.design = "com.google.android.material:material:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
deps.support = support

deps.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
deps.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"

deps.realm = "io.realm:realm-gradle-plugin:$versions.realm"

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide

def rx = [:]
rx.java2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx.java2_extentions = "com.github.akarnokd:rxjava2-extensions:$versions.rxjava2_extentions"
rx.uber_autodispose = "com.uber.autodispose:autodispose-android-archcomponents:$versions.uber_autodispose"
deps.rx = rx

deps.timber = "com.jakewharton.timber:timber:$versions.timber"

deps.ktlint = "com.github.shyiko:ktlint:$versions.ktlint"
deps.detekt = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$versions.detekt"
deps.detekt_formatting = "io.gitlab.arturbosch.detekt:detekt-formatting:$versions.detekt"

ext.deps = deps

